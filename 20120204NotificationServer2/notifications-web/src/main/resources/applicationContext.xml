<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd 
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<context:component-scan base-package="com.**.controler" />
	<context:annotation-config />
    <bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/>
    
    <!-- 属性文件读入,使用rapid中的JdbcPlaceholderConfigurer则可以从数据库读取配置信息 -->
	<context:property-placeholder location="classpath:avro-service.properties"/>
    
    <bean id="informationsSerivce" class="com.borqs.information.rpc.client.InformationsClientImpl"
    	init-method="init" destroy-method="destory" scope="singleton">
        <property name="host" value="${avro.host}"/>
        <property name="port" value="${avro.port}"/>
    </bean>
    
	<!-- freemarker configuration -->
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
	  <property name="templateLoaderPath" value="/WEB-INF/ftl/"/>
	  
	  <property name="freemarkerSettings">
	      <props>
	          <prop key="defaultEncoding">UTF-8</prop>
	      </props>
	  </property> 
	  <property name="freemarkerVariables">
	    <map>
	      <entry key="xml_escape" value-ref="fmXmlEscape"/>
	    </map>
	  </property>
	</bean>
	
	<!-- Exception resolver -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">		
		<property name="defaultErrorView" value="/commons/error" />
		<property name="exceptionMappings">
			<props>
			</props>
		</property>
	</bean>
	
	<!--bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	<bean id="conversion-service" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/-->
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<!--property name="webBindingInitializer">
			<bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
				<property name="validator" ref="validator" />
			</bean>
		</property-->
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
				<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
				<bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<!--bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" /-->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
</beans>


