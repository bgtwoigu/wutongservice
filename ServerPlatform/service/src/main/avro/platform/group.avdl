
@namespace("com.borqs.server.service.platform")
protocol Group {
    import schema "../../../../../base/src/main/avro/error.avsc";

    long createGroup(long begin, string type, string name, int memberLimit, int isStreamPublic, int canSearch, int canViewMembers, int canJoin, int canMemberInvite, int canMemberApprove, int canMemberPost, int canMemberQuit, int needInvitedConfirm, long creator, string label, bytes properties) throws com.borqs.server.base.ResponseError;
    boolean updateGroup(long groupId, bytes info, bytes properties) throws com.borqs.server.base.ResponseError;
    boolean destroyGroup(string groupIds) throws com.borqs.server.base.ResponseError;

    bytes getGroup(long groupId, string cols) throws com.borqs.server.base.ResponseError;
    bytes getGroups(long begin, long end, string groupIds, string cols) throws com.borqs.server.base.ResponseError;
    bytes findGroupsByMember(long begin, long end, long member, string cols) throws com.borqs.server.base.ResponseError;
    string findGroupIdsByMember(long begin, long end, long member) throws com.borqs.server.base.ResponseError;
    string findGroupIdsByTopPost(string postId) throws com.borqs.server.base.ResponseError;
    bytes findGroupsByName(long begin, long end, string name, string cols) throws com.borqs.server.base.ResponseError;

    boolean addMember(long groupId, long member, int role) throws com.borqs.server.base.ResponseError;
    boolean addMembers(long groupId, bytes roles) throws com.borqs.server.base.ResponseError;
    boolean removeMembers(long groupId, string members) throws com.borqs.server.base.ResponseError;

    boolean grant(long groupId, long member, int role) throws com.borqs.server.base.ResponseError;
    boolean grants(long groupId, bytes roles) throws com.borqs.server.base.ResponseError;
    string getMembersByRole(long groupId, int role, int page, int count, string searchKey) throws com.borqs.server.base.ResponseError;
    string getAdmins(long groupId, int page, int count) throws com.borqs.server.base.ResponseError;
    long getCreator(long groupId) throws com.borqs.server.base.ResponseError;
    string getAllMembers(long groupId, int page, int count, string searchKey) throws com.borqs.server.base.ResponseError;
    string getMembers(string groupIds, int page, int count) throws com.borqs.server.base.ResponseError;
    int getMembersCount(long groupId) throws com.borqs.server.base.ResponseError;
    bytes getMembersCounts(string groupIds) throws com.borqs.server.base.ResponseError;
    boolean hasRight(long groupId, long member, int minRole) throws com.borqs.server.base.ResponseError;

    boolean addOrUpdatePendings(long groupId, bytes statuses) throws com.borqs.server.base.ResponseError;
    bytes getPendingUsersByStatus(long groupId, long source, string status, int page, int count, string searchKey) throws com.borqs.server.base.ResponseError;
    int getUserStatusById(long groupId, long userId) throws com.borqs.server.base.ResponseError;
    int getUserStatusByIdentify(long groupId, string identify) throws com.borqs.server.base.ResponseError;
    bytes getUserStatusByIds(long groupId, string userIds) throws com.borqs.server.base.ResponseError;
    bytes getUserStatusByIdentifies(long groupId, string identifies) throws com.borqs.server.base.ResponseError;
    bytes getUsersCounts(string groupIds, int status) throws com.borqs.server.base.ResponseError;
    boolean updateUserIdByIdentify(string userId, string identify) throws com.borqs.server.base.ResponseError;

    string getSourcesById(long groupId, string userId) throws com.borqs.server.base.ResponseError;
    string getSourcesByIdentify(long groupId, string identify) throws com.borqs.server.base.ResponseError;

    boolean isGroup(long id) throws com.borqs.server.base.ResponseError;
    boolean isPublicCircle(long id) throws com.borqs.server.base.ResponseError;
    boolean isActivity(long id) throws com.borqs.server.base.ResponseError;
    boolean isOrganization(long id) throws com.borqs.server.base.ResponseError;
    boolean isGeneralGroup(long id) throws com.borqs.server.base.ResponseError;
    boolean isEvent(long id) throws com.borqs.server.base.ResponseError;
    boolean isSpecificType(long id, string type) throws com.borqs.server.base.ResponseError;

    boolean defaultMemberNotification(long groupId, string userIds) throws com.borqs.server.base.ResponseError;
    boolean updateMemberNotification(long groupId, string userId, bytes notif) throws com.borqs.server.base.ResponseError;
    bytes getMembersNotification(long groupId, string userIds) throws com.borqs.server.base.ResponseError;
    bytes  getGroupUsersByStatus(long groupId, string status, int page, int count, string searchKey) throws com.borqs.server.base.ResponseError;

    string findGroupIdsByProperty(string propKey, string propVal, int max) throws com.borqs.server.base.ResponseError;
}